// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  avatar    String?
  status    UserStatus @default(ONLINE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Messages sent by this user
  messages Message[]
  
  // Rooms this user is a member of
  roomMemberships RoomMember[]
  
  // Rooms created by this user
  createdRooms Room[]

  @@map("users")
}

model Room {
  id          String   @id @default(cuid())
  name        String
  description String?
  isPrivate   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String
  createdByUser User   @relation(fields: [createdBy], references: [id], onDelete: Cascade)

  // Members of this room
  members RoomMember[]
  
  // Messages in this room
  messages Message[]

  @@map("rooms")
}

model RoomMember {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  role      MemberRole @default(MEMBER)
  joinedAt  DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@unique([userId, roomId])
  @@map("room_members")
}

model Message {
  id        String   @id @default(cuid())
  content   String
  type      MessageType @default(TEXT)
  userId    String
  roomId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("messages")
}

enum UserStatus {
  ONLINE
  OFFLINE
  AWAY
  BUSY
}

enum MemberRole {
  ADMIN
  MODERATOR
  MEMBER
}

enum MessageType {
  TEXT
  IMAGE
  FILE
  SYSTEM
} 